install.packages(swirl)
install.packages("swirl")
library("swirl")
swirl()
5 + 7
<- 5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
<- c(z, 555, z)
c(z, 555, z)
z * 2 + 100
mysqrt <- sqrt(z - 1)
mySqrt <- sqrt(z - 1)
mySqrt
myDiv <- c(z / mySqrt)
myDiv <- z/ mySqrt
myDiv
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
swirl
swirl()
add2 <- function(x,y) {
x + y
} add2<(3, 5)
add2 <- function(x,y) {
x + y
}
add2(3, 5)
add2 <- function(x,y) {
x + y
}
above10 <- function(x) {
use <- x> 10
x [use]
}
above <- function(x, n) {
use <- x > n
x[use]
}
x <- 1:20
above(x,12)
above <- function(x, n = 10) {
use <- x > n
x[use]
}
above(x)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[, i])
}
means
}
columnmeans(airquality)
cube <- function(x, n) {
x^3
} cube(3)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
y + z
}
z <- 4
x + g(x)
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if (x < 3) {
NA
} else {
10
}
f(y)
x <- 5
y <- if (x < 3) {
NA
} else {
10
}
eval(y)
install. packages(kernsmooth)
install.packages(kernsmooth)
available.packages(kernsmooth)
pollutantmean <- function(directory, pollutant, id = 1:332) {}
clear()
clear
source("specdata.R")
source("specdata.R")
mkdir("specdata.R")
ls
source(specdata.r)
setwd("~/Desktop/specdata.R")
source("specdata.r")
source("pollutantmean.r")
pollutantmean("specdata", "sulfate",20:35)
getwd
getwd()
pollutantmean("specdata"), "nitrate", 1:10
pollutantmean("specdata", "nitrate, 1:10")
## [1]
getwd()
pollutantmean("sulfate", 20:35)
getwd()
getwd()
pollutantmean("specdata", "sulfate", 20:30)
pollutantmean("specdata, "sulfate, 20:30) {}
pollutantmean("specdata, "sulfate", 20:30) {}
pollutantmean("specdata", "sulfate", 20:30) {}
source(pollutantmean.R)
setwd("~/Desktop/specdata")
pollutantmean("specdata", "nitrate", 20:30)
pollutantmean <- function("specdata", "nitrate", 20:30)
pollutantmean <- function ("specdata", "sulfate", 10:20) {                  }
pollutantmean ("Specdata", "sulfate", 10:20) {                            }
pollutantmean ("specdata", "sulfate", 010:020)
setwd(directory)
Setwd(specdata)
myData <- dir(specdata)
mywd()
setwd("~/Desktop/specdata")
pollutantmean <- function(directory, pollutant, id = 1:332) {}
directory <- "specdata"
read.csv
read.csv(001)
formatC(001, width=3, flag=0)
format(001:332, width=3, flag=0)
"specdata" <-read.csv("001:010.csv")
pollutantmean <- function("specdata, "sulfate", 001:332)
poluttantmean <- function ("directory", "pollutant", 1:332 )
pollutantmean <- function ("directory", "pollutant", 1:332)
x <- read.csv(specdata. 001.csv)
x<- read.csv(specdata/001.csv)
x <- read.csv ("specdata", 001.csv)
read.csv (001)
read.csv (001.csv)
pollutantmean <- function(directory, pollutant, id = 1:332)
files <- dir("specdata")
Data <- data.frame(1:332)
files <- dir("specdata")
data <- data.frame(1:332)
setwd("specdata") paste("specdata")
setwd(specdata) paste(specdata)
setwd(specdata)
setwd("~/Desktop/specdata")
paste("~/Desktop/specdata")
variable <- dir("~/Desktop/specdata")
mydataframe <- data.frame
for(1:10)
for (1:10)
read.csv(1:10)
read.csv()
pollutantmean <- function (directory, pollutant, id=1:332) {
files <- list.files(directory)
data <- data.frame()
myFiles <- paste(directory,files[id],sep="/")
for (file in myFiles) {
temp <- read.table(paste(getwd(),"/", file, sep=""), header=TRUE, sep=',')
data <- rbind(data, temp)
}
polmean <- mean(data[,pollutant], na.rm=TRUE)
}
pollutantmean<- function(directory, pollutment, id = 1:332)
+ setwd("C:/Users/EGW/Documents/specdata")
> directory<"specdata"
[1] TRUE
> pollutant<-"sulfate"
> id<-1:332
> vec1<-numeric()
> vec2<-numeric()
> for (i in id){
+ set<- read.csv(list.files(pattern=".csv")[i])
+ set1<-set[2:2]
+ set2<-set1[!is.na(set1)]
+ set3<-set[3:3]
+ set4<-set3[!is.na(set3)]
+ vec1<-c(vec1,set2)
+ vec2<-c(vec2,set4)
+ }
setwd("~/Desktop/specdata")
pollutantmean<- function(directory, pollutment, id = 1:332)
+ setwd("~/Desktop/specdata")
> directory<"specdata"
[1] TRUE
> pollutant<-"sulfate"
> id<-1:332
> vec1<-numeric()
> vec2<-numeric()
> for (i in id){
+ set<- read.csv(list.files(pattern=".csv")[i])
+ set1<-set[2:2]
+ set2<-set1[!is.na(set1)]
+ set3<-set[3:3]
+ set4<-set3[!is.na(set3)]
+ vec1<-c(vec1,set2)
+ vec2<-c(vec2,set4)
+ }
pollutantmean <- function(directory, pollutant, id=1:332) {
setwd("~/Desktop/specdata")
x <- list.files(pattern=".csv")
y <- lapply(x[id], read.table, header = TRUE, sep=",")
z <- do.call(rbind, y)
meanpollut <- mean(z[ ,paste(pollutant)], na.rm= TRUE)
return(meanpollut)
meanpollut("specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332){
search <- list.files(directory, pattern="*.csv",full.names=TRUE)
relevant <- search[id]
#print(relevant)
data <- data.frame()
for (i in 1:length(relevant)){
#do.call performs rbind upon the lapply fuction consisting of relevant
# (which is full path for CSV file)
#and puts it into the read.csv file.
all.data <- do.call(rbind, lapply(relevant,read.csv))
}
good.data <- data.frame(all.data[complete.cases(all.data),])
#print(good.data[1:10,])
answer <- mean(good.data[,pollutant],na.rm=TRUE)
print(answer)
}
pollutantmean <- function(directory, pollutant, id=1:332) {
setwd("~/Desktop/specdata")
x <- list.files(pattern="001:332.csv")
y <- lapply(x[1:332], read.table, header = TRUE, sep=",")
z <- do.call(rbind, y)
pollutantmean <- function(directory, pollutant, id=1:332) {
setwd("~/Desktop/specdata")
x <- list.files(pattern="001:332.csv")
y <- lapply(x[1:332], read.table, header = TRUE, sep=",")
z <- do.call(rbind, y)
}
good.data <- data.frame(all.data[complete.cases(all.data),])
#print(good.data[1:10,])
answer <- mean(good.data[,pollutant],na.rm=TRUE)
print(answer)
pollutantmean <- function(directory, pollutant, id=1:332) {
+     setwd("~/Desktop/specdata")
+     x <- list.files(pattern="001:332.csv")
+     y <- lapply(x[1:332], read.table, header = TRUE, sep=",")
+     z <- do.call(rbind, y)
+
+ }
+ good.data <- data.frame(all.data[complete.cases(all.data),])
+ #print(good.data[1:10,])
+ answer <- mean(good.data[,pollutant],na.rm=TRUE)
}
pollutantmean <- function(directory, pollutant, id=1:332) {
+     setwd("~/Desktop/specdata")
+     x <- list.files(pattern="001:332.csv")
+     y <- lapply(x[1:332], read.table, header = TRUE, sep=",")
+     z <- do.call(rbind, y)
+
+ }
data <- data.frame(good.data)
+ good.data <- data.frame(all.data[complete.cases(all.data),])
+ #print(good.data[1:10,])
+ answer <- mean(good.data[,pollutant],na.rm=TRUE)
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
files <- paste(directory,"~/Desktop/specdata",formatC(id,width=3,flag="0"),".csv",sep="")
data <- ldply(files, function(fn) read.csv(fn))
mean(data[,pollutant],na.rm=TRUE)
}
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
files <- paste(directory,"~/Desktop/specdata",formatC(id,width=3,flag="0"),".csv",sep="")
data <- ldply(files, function(1:332) read.csv(1:332))
mean(data[,pollutant],na.rm=TRUE)
}
$ git clone https://github.com/nadsabu/ProgrammingAssignment2.git
$ git clone https://github.com/nadsabu/spoon-knife.git
cachematrix.R
setwd("~/Desktop/Coursera")
library(datasets)
data(iris)
?iris
mean(Sepal.length)
Sepal.length <- mean(data[virginica])
Sepal.length <- mean(virginica)
tapply(iris$Speal.Length, iris$virginica, mean)
mean(iris[iris$species == "virginica, "Sepal.Length])
s <- split(iris$Sepal.Length, iris$species)
mean(s$virginica)
data <- date.frame(iris)
data.frame <- (iris)
mean(iris[iris$Species == "virginica", "Sepal.Length"])
apply(iris[, 1:4], 1, ,mean)
rowmMeans(iris[, 1:4])
rowMeans(iris[, 1:4])
str(apply)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?(mtcars)
data.frame(mtcars)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$hp, mtcars$cyl, mean)
abs(mtcars$hp, mtcsars$cyl,mean)
abs(mtcars$hp, mtcars$cyl, mean)
abs(126.5779)
debyg(ls)
debug(ls)
ls
setwd("~/Desktop/ProgrammingAssignment2")
class(a$get)
data.frame(a)
data(a)
data <- data.frame(a)
a <- makeVector(c(1,2,3))
makeCachematric <- function(x = matrix(1:4,2))
<- a$get()
myVector <- makevector(c(1, 2, 3))
Makevector <-(myVector)
makeCachematrix <- function(x = matrix(1:4,2))
<-
makeCacheMatrix <- function(x = matrix(1:4))
makeCacheMatrix <- function(x = matrix(x, ...)) {
<-
makeCacheMatrix <- function(x = matrix(x, ...))
m <- x$getmean()
x <- makeCacheMatrix(matrix(1:4,2))
m$getInverse()
setwd("~/Desktop/ProgrammingAssignment2")
makeCacheMatrix <- function(x = matrix(1:4)){}
a$get()
makecacheMatrix$get(1:4)
x$get()
x$get(1:4)
x <- makeCacheMatrix(matrix(1:4, 2))
x$get()
x$get(matrix(1:4,2))
list(set = set, get = get, setmean = setmean, getmean = getmean)
x <- makeVector(c(1,2,3))
x <- makeCacheMatrix(matrix(1:4,2))
x$get()
x(get(2))
x$get(2)
cachemean <- function(x, ...)
x <- x$getmean(1:4)
a <- makeCacheMatrix(matrix(1:4,2))
a$get()
cachesolve(a)
a$set()
a$set(1:4)
cacheSolve <- function(x, ...)
cachesolve(x)
x$getinverse()
